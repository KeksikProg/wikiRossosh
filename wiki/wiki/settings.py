"""
Django settings for wiki project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('secret_key')
LOGIN_REDIRECT_URL = 'main:home' 
CRISPY_TEMPLATE_PACK = 'bootstrap4'


EMAIL_PORT = os.getenv('email_port') # Порт через который будут отправляется письма
EMAIL_USE_SSL = True # Использовать ли протокол шифрования SSL
EMAIL_HOST = os.getenv('email_host') # Какой протокол SMTP использовать
EMAIL_HOST_USER = os.getenv('user_host') # Почта с которой будут отправлятся все письма
EMAIL_HOST_PASSWORD = os.getenv('user_pass') # Пароль от это почты
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


SOCIAL_AUTH_VK_OAUTH2_KEY = os.getenv('vk_key')  # Секретный ключ который берется из приложения вконтакте
SOCIAL_AUTH_VK_OAUTH2_SECRET = os.getenv('vk_secret') # тоже ключ и тоже берется из приложения 

SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email'] # Чтобы дополнительно запросить у пользователя почту 

AUTHENTICATION_BACKENDS = ( # Список классов реализующий аутентефикацию и авторизацию
    'social_core.backends.vk.VKOAuth2', # Это и ниже для авторизации с помощью вк
    'django.contrib.auth.backends.ModelBackend',

)
THUMBNAIL_ALIASES = {
    '' : {
        'default' : {
            'size' : (201, 201),
            'crop' : 'scale',
        }
    }
}

THUMBNAIL_BASEDIR = 'thumbs'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'easy_thumbnails',
    'django_cleanup',
    'social_django',
    'crispy_forms',
    'bootstrap4',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'wiki.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends', # это и одно ниже для регистрации через соц сети
                'social_django.context_processors.login_redirect',
                'main.middle.rubric_context_proccessor',
            ],
        },
    },
]

WSGI_APPLICATION = 'wiki.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv('db_name'),
        'USER' : os.getenv('db_user'),
        'PASSWORD' : os.getenv('db_pass'),
        'HOST' : '127.0.0.1',
        'PORT' : '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'main/static/main/media')
